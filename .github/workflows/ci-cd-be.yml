name: Java CI with Maven and Docker

on:
  push:
    branches:
      - main


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Build Docker image
      run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/image-be:latest

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml


  push:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
     
      - name: Remove Old Image with Tag latest
        run: |
          echo "Removing old image with tag: latest"
          docker rmi ${{ secrets.DOCKER_USERNAME }}/image-be:latest || true

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/image-be:latest -f Dockerfile .

        
   
